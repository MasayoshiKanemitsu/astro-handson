---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

import { getPosts } from '../libs/posts';
import type { Post } from '../libs/posts';

export async function getStaticPaths({ paginate }: { paginate: any }) {
	const posts = await getPosts();
	// console.log(posts);

	return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
---

<Layout title="Welcome to Astro.">
	<main>
		<ul role="list" class="grid md:grid-cols-2 gap-4">
			{
				page.data && page.data.map((post: Post)=>(
					<div class="mx-auto rounded-lg bg-white shadow">
						<div class="p-4">
							<h3 class="text-xl font-medium text-gray-900"><a href={`/posts/${post.id}`}>{post.title}</a></h3>
							<p class="mt-1 text-gray-500">{post.body}</p>
						</div>
					</div>
				))
			}
		</ul>

		<div class="flex justify-center mt-10">
			<nav aria-label="Pagination">
				<ul class="inline-flex items-center -space-x-px rounded-md text-sm shadow-sm">
					{
						page.url.prev !== undefined ? (
							<li>
								<a href={page.url.prev.length > 0 ? page.url.prev : '/'} class="inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2 font-medium text-gray-500 hover:bg-gray-50">
									<span class="sr-only">Previous</span>
									<svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
										<path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
									</svg>
								</a>
							</li>
						) : null
					}
					{
						[...Array(page.lastPage)].map((_, i) => {
							const number = i + 1;
							const isCurrent = number === page.currentPage;

							return (
								<li>
									<a 
										href={`/${number === 1 ? '' : number}`} 
										class={
											isCurrent ? 
												'z-10 inline-flex items-center border border-gray-300 bg-gray-100 px-4 py-2 font-medium text-gray-700'
												: 'inline-flex items-center border border-gray-300 bg-white px-4 py-2 text-gray-500 hover:bg-gray-50'
										}
										aria-current={isCurrent?"page":undefined}>
										{number}
									</a>
								</li>
							);
						})
					}
					{
						page.url.next !== undefined ? (
							<li>
								<a href={page.url.next} class="inline-flex items-center rounded-r-md border border-gray-300 bg-white px-2 py-2 font-medium text-gray-500 hover:bg-gray-50">
									<span class="sr-only">Next</span>
									<svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
										<path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
									</svg>
								</a>
							</li>
						) : null
					}
				</ul>
			</nav>
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
